@using System.Linq
@using ItsAllAboutTheGame.Data.Models

@model LoginViewModel
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Log in";
}
<main class="padding-form">
    <div class="row">
        <div class="col-md-12">
            <section class="login-form mr-auto ml-auto m-0">
                <form class="white-text" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
                    <h4 class="text-center">@ViewData["Title"]</h4>
                    <div class="form-group md-form form-sm white-text col-form-label-lg">
                        <i class="fa fa-envelope prefix"></i>
                        <label asp-for="Email" class="font-weight-bold white-text">Your Email</label>
                        <input asp-for="Email" class="form-control white-text mb-0" type="text" maxlength="50" />
                        <small><span asp-validation-for="Email" class="text-danger p-0 validation-text"></span></small>
                    </div>
                    <div class="form-group md-form form-sm white-text col-form-label-lg">
                        <i class="fa fa-key prefix" aria-hidden="true"></i>
                        <label asp-for="Password" class="font-weight-bold white-text">Password</label>
                        <input asp-for="Password" class="form-control white-text mb-0" maxlength="50" />
                        <small><span asp-validation-for="Password" class="text-danger p-0 validation-text"></span></small>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label asp-for="RememberMe">
                                <input asp-for="RememberMe" />
                                @Html.DisplayNameFor(m => m.RememberMe)
                            </label>
                        </div>
                        @if (ViewData["InvalidLoginAtempt"] != null)
                        {
                            <p class="text-danger p-0 validation-text text-center mr-auto ml-auto">@ViewData["InvalidLoginAtempt"]</p>
                        }
                    </div>
                    <div class=" form-group text-center mt-4 align-middle">
                        <button class="btn btn-outline-white waves-effect waves-light" type="submit">@ViewData["Title"]<i class="fa fa-sign-in ml-2"></i></button>
                    </div>
                    <div class="form-group text-center mt-4">
                        <p>
                            <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Register as a new user?</a>
                        </p>
                    </div>
                </form>
            </section>
        </div>
    </div>
    <div class="text-center">
        @{
            var loginProvider = (await SignInManager.GetExternalAuthenticationSchemesAsync()).FirstOrDefault();
            if (loginProvider != null)
            {
                <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                    <div>
                        <p>
                                <button type="submit" class="btn btn-primary btn-fb" name="provider" value="@loginProvider.Name" title="Log in using your @loginProvider.DisplayName account"><i class="fa fa-facebook pr-1"></i>@loginProvider.Name</button>
                        </p>
                    </div>
                </form>
            }
            else
            {
                <div>
                    <p>
                        There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                        for details on setting up this ASP.NET application to support logging in via external services.
                    </p>
                </div>
            }
        }
    </div>
</main>
<!--Main layout-->

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
